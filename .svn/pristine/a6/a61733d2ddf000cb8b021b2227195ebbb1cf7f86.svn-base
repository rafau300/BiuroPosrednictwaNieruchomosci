import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


public class Nieruchomosc {
	
	static BazaDanych baza = new BazaDanych();
	
	static int id;
	boolean czyNaSprzedaz;
	//float cena;
	float powierzchnia;
	int rokZbudowaniaNieruchomosci;
	
	static int iloscRekordow = 50;
	static String[] miejscowosc = new String[iloscRekordow];
	static String[] ulica = new String[iloscRekordow];
	static int[] cena = new int[iloscRekordow];

	static String[] dane = new String[15];
	static String[] kolumny = new String[15];
	
	final static JFrame f = new JFrame("Szczegolowe dane nieruchomosci");
    static JPanel panel = new JPanel();
    static JButton ok = new JButton ("OK");
    
    static String data[][] = {};
    static String col[] = {"Miejscowosc","Ulica","Cena"};
    static DefaultTableModel model = new DefaultTableModel(data,col);
    
    static JTable tabelaNieruchomosci = new JTable(model);
    static JScrollPane scrollpane = new JScrollPane(tabelaNieruchomosci);
    
    static String data2[][] = {};
    static String col2[] = {"Typ","Dane"};
    static DefaultTableModel model2 = new DefaultTableModel(data2,col2);
    
    static JTable tabelaZDanymi = new JTable(model2);
    static JScrollPane scrollpane2 = new JScrollPane(tabelaZDanymi);
    
    /**
	 * Tworzenie i ustawianie ramki, na ktorej znajduja sie poszczegolne elementy
	 */
    static void ustawRamke() {
	    f.setSize(640,480);
        f.add(panel);
        panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
        f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
        //f.setResizable(false);
        //f.pack();
        f.setLayout(new FlowLayout());
        f.setVisible(true);
	}
    
    /**
	 * Wyswietlenie listy nieruchomosci dostepnych w bazie danych.
	 */
	static void wyswietlListeDostepnychNieruchomosci() {
		//Lista dostepnych nieruchomosci
        final JLabel label = new JLabel();
        label.setText("Lista dostepnych nieruchomosci:");
        panel.add(label);
        
        scrollpane.setPreferredSize(new Dimension(500,80));
        panel.add(scrollpane);
        
        try {
        	baza.wyswietlNieruchomosci("SELECT * FROM nieruchomosc",miejscowosc,ulica,cena);
        
        	int i=1;
        	while (miejscowosc[i] != null) {
        		model.insertRow(i-1,new Object[]{miejscowosc[i],ulica[i],cena[i]});
        		i++;
        	}
        	} catch (Exception e) {
        		//e.printStackTrace();
        }
        
        MouseListener listener = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                  //id = tabelaKupujacych.rowAtPoint(e.getPoint())+1;
                  id = tabelaNieruchomosci.getSelectedRow() + 1;
                  edytujSzczegoloweDaneNieruchomosci(id);
            }
         };
         
         tabelaNieruchomosci.addMouseListener(listener);
        
	}
	
	public static void wyswietlSzczegoloweDaneNieruchomosci(int id) {
        JLabel label2 = new JLabel();
        label2.setText("Szczegolowe dane wybranej nieruchomosci:");
        panel.add(label2);
        
		try {
        	baza.wyswietlSzczegoloweDaneNieruchomosci(id, dane, kolumny);        	
        	} catch (Exception e) {
        		e.printStackTrace();
        	}
	        scrollpane2.setVisible(true);
	        scrollpane2.setPreferredSize(new Dimension(500,80));
	        panel.add(scrollpane2);
	        
	        int i=1;
	        try {
	        	while (dane[i] != null) {
	        		model2.insertRow(i-1, new Object[]{kolumny[i],dane[i]});
	        		i++;
	        	}
	        } catch (Exception e) {
	        	e.printStackTrace();
	        }
	}
	
	public static void edytujSzczegoloweDaneNieruchomosci(int id) {
		try {
        	baza.wyswietlSzczegoloweDaneNieruchomosci(id, dane, kolumny);        	
        	} catch (Exception e) {
        		e.printStackTrace();
        	}
	        
	        
		int i;
		//for (i = model2.getRowCount()-1;i>0;i--);
		//	model2.removeRow(i);
			
			model2.setRowCount(0);
		
			i=1;
	        try {
	        	while (dane[i] != null) {
	        		model2.insertRow(i-1, new Object[]{kolumny[i],dane[i]});
	        		i++;
	        	}
	        } catch (Exception e) {
	        	e.printStackTrace();
	        }
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		SwingUtilities.invokeLater(new Runnable() { public void run() {
		
		ustawRamke();
		wyswietlListeDostepnychNieruchomosci();
		wyswietlSzczegoloweDaneNieruchomosci(1);
		
		ok.setSize(100, 50);
        ok.setVisible(true);
        panel.add(ok);
        
        ok.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (ok.isEnabled()) {
        			f.dispose();
        		}
        	}
        });
		}
	});
	}

}
